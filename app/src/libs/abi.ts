export const abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_numberOfPlayers",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "_airnodeRrp", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "ENTRY_FEE",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_qrngUint256",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_qrngUint256Array",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "airnode",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "airnodeRrp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAirnodeRrpV0",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeBet",
    inputs: [
      {
        name: "_playerIndex",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "_toAdd", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "endpointIdUint256",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "endpointIdUint256Array",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "expectingRequestWithIdToBeFulfilled",
    inputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fulfillUint256",
    inputs: [
      { name: "requestId", type: "bytes32", internalType: "bytes32" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fulfillUint256Array",
    inputs: [
      { name: "requestId", type: "bytes32", internalType: "bytes32" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCurrentBetForPlayer",
    inputs: [
      { name: "_playerIndex", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentCountOfPlayers",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getGameState",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "enum Game.GameState" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPlayerDetails",
    inputs: [
      { name: "_playerIndex", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Game.Player",
        components: [
          { name: "index", type: "uint256", internalType: "uint256" },
          {
            name: "playerAddr",
            type: "address",
            internalType: "address",
          },
          {
            name: "hand",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "bet", type: "uint256", internalType: "uint256" },
          { name: "turn", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRandomNumber",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRandomNumberArray",
    inputs: [],
    outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTotalNumberOfPlayers",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTotalPrizePool",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "joinGame",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "makeRequestUint256",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "makeRequestUint256Array",
    inputs: [{ name: "size", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pickWinner",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "playRound",
    inputs: [
      {
        name: "_playerIndex",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_indicesOfDice",
        type: "bool[5]",
        internalType: "bool[5]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "prePlayRound",
    inputs: [
      {
        name: "_numberOfDiceToRoll",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRequestParameters",
    inputs: [
      { name: "_airnode", type: "address", internalType: "address" },
      {
        name: "_endpointIdUint256",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_endpointIdUint256Array",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_sponsorWallet",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sponsorWallet",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "GameStarted",
    inputs: [
      {
        name: "numberOfPlayers",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PlayerAdded",
    inputs: [
      {
        name: "playerAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "playerIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PlayerPlayedRound",
    inputs: [
      {
        name: "playerIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedUint256",
    inputs: [
      {
        name: "requestId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "response",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedUint256Array",
    inputs: [
      {
        name: "requestId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "response",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestedUint256",
    inputs: [
      {
        name: "requestId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestedUint256Array",
    inputs: [
      {
        name: "requestId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "size",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WithdrawalRequested",
    inputs: [
      {
        name: "airnode",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sponsorWallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntryFeeNotMet",
    inputs: [{ name: "feeAmount", type: "uint256", internalType: "uint256" }],
  },
  { type: "error", name: "GameAtCapacity", inputs: [] },
  { type: "error", name: "NotAuthorized", inputs: [] },
  {
    type: "error",
    name: "PlayerIndexNotExist",
    inputs: [{ name: "playerIndex", type: "uint256", internalType: "uint256" }],
  },
] as const;
